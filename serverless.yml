service: ${env:GITHUB_REPO_NAME}

custom:
  PROJECT: nft id

provider: ${file(./serverless-provider.yml)}

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters

package:
  patterns:
    - '!*'
    - '!*/**'
    - 'dist/*'
    - 'dist/*/**'

stepFunctions:
  stateMachines:
    iteratble_writer_searchAndVerifyTweets:
      events:
        - schedule: rate(1 minute) # examples: rate(1 minute), rate(60 minutes)
      definition:
        StartAt: Iterator
        States:
          Iterator:
            Type: Task
            Resource:
              Fn::GetAtt: [writer_searchAndVerifyTweets, Arn]
            ResultPath: "$.taskresult"
            Next: IsCountReached
          IsCountReached:
            Type: Choice
            Choices:
              - Variable: "$.taskresult.continue"
                BooleanEquals: true
                Next: Wait
            Default: Done
          Wait:
            Type: Wait
            Seconds: 9
            Next: Iterator
          Done:
            Type: Pass
            End: true

functions:
  #  ###
  writer_createPendingRequest:
    handler: dist/index.writer_createPendingRequest
    fileSystemConfig: ${file(./serverless-fs.yml)}
    timeout: 60
    events:
      - http:
          path: createPendingRequest
          method: post
          cors: true
  writer_searchAndVerifyTweets:
    handler: dist/index.writer_searchAndVerifyTweets
    fileSystemConfig: ${file(./serverless-fs.yml)}
    timeout: 60
  ###### Readers ######
  reader_fetchVerifiedRequest:
    handler: dist/index.reader_fetchVerifiedRequest
    fileSystemConfig: ${file(./serverless-fs.yml)}
    events:
      - http:
          path: fetchVerifiedRequest
          request:
            parameters:
              querystrings:
                twitterHandle: false
                url: false
          method: get
          cors: true
  reader_extractDataFromNFTContract:
    handler: dist/index.reader_extractDataFromNFTContract
    fileSystemConfig: ${file(./serverless-fs.yml)}
    timeout: 12
    events:
      - http:
          path: extractDataFromNFTContract
          request:
            parameters:
              querystrings:
                openseaUrl: true
          method: get
          cors: true